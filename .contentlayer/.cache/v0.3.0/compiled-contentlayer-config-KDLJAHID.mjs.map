{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import {defineDocumentType, makeSource} from \"@contentlayer/source-files\";\r\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\r\nimport rehypePrettyCode from \"rehype-pretty-code\";\r\nimport rehypeSlug from \"rehype-slug\";\r\nimport remarkGfm from \"remark-gfm\";\r\n\r\nexport const Entry = defineDocumentType(() => ({\r\n    name: \"Entry\",\r\n    filePathPattern: `**/*.mdx`,\r\n    contentType: \"mdx\",\r\n    fields: {\r\n        title: {type: \"string\", required: true, description: \"The title of the post\"},\r\n        publishedAt: {type: \"date\", required: true, description: \"The date the post was published\"},\r\n        summary: {type: \"string\", required: true, description: \"A short summary of the post\"},\r\n        image: {type: \"string\", required: false, description: \"The main image of the post\"},\r\n        tags: {type: \"enum\", required: false, description: \"The tags of the post\"},\r\n    },\r\n    computedFields: {\r\n        slug: {\r\n            type: \"string\",\r\n            resolve: doc => doc._raw.flattenedPath,\r\n        },\r\n    },\r\n}));\r\n\r\nexport default makeSource({\r\n    contentDirPath: \"content\",\r\n    documentTypes: [Entry],\r\n    mdx: {\r\n        remarkPlugins: [remarkGfm],\r\n        rehypePlugins: [\r\n            rehypeSlug,\r\n            [\r\n                rehypePrettyCode,\r\n                {\r\n                    theme: \"one-dark-pro\",\r\n                    onVisitLine(node) {\r\n                        // Prevent lines from collapsing in `display: grid` mode, and allow empty\r\n                        // lines to be copy/pasted\r\n                        if (node.children.length === 0) {\r\n                            node.children = [{type: \"text\", value: \" \"}];\r\n                        }\r\n                    },\r\n                    onVisitHighlightedLine(node) {\r\n                        node.properties.className.push(\"line--highlighted\");\r\n                    },\r\n                    onVisitHighlightedWord(node) {\r\n                        node.properties.className = [\"word--highlighted\"];\r\n                    },\r\n                },\r\n            ],\r\n            [\r\n                rehypeAutolinkHeadings,\r\n                {\r\n                    properties: {\r\n                        className: [\"anchor\"],\r\n                    },\r\n                },\r\n            ],\r\n        ],\r\n    },\r\n});\r\n"],
  "mappings": ";AAAA,SAAQ,oBAAoB,kBAAiB;AAC7C,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AACvB,OAAO,eAAe;AAEf,IAAM,QAAQ,mBAAmB,OAAO;AAAA,EAC3C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO,EAAC,MAAM,UAAU,UAAU,MAAM,aAAa,wBAAuB;AAAA,IAC5E,aAAa,EAAC,MAAM,QAAQ,UAAU,MAAM,aAAa,kCAAiC;AAAA,IAC1F,SAAS,EAAC,MAAM,UAAU,UAAU,MAAM,aAAa,8BAA6B;AAAA,IACpF,OAAO,EAAC,MAAM,UAAU,UAAU,OAAO,aAAa,6BAA4B;AAAA,IAClF,MAAM,EAAC,MAAM,QAAQ,UAAU,OAAO,aAAa,uBAAsB;AAAA,EAC7E;AAAA,EACA,gBAAgB;AAAA,IACZ,MAAM;AAAA,MACF,MAAM;AAAA,MACN,SAAS,SAAO,IAAI,KAAK;AAAA,IAC7B;AAAA,EACJ;AACJ,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,KAAK;AAAA,EACrB,KAAK;AAAA,IACD,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACX;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,UACI,OAAO;AAAA,UACP,YAAY,MAAM;AAGd,gBAAI,KAAK,SAAS,WAAW,GAAG;AAC5B,mBAAK,WAAW,CAAC,EAAC,MAAM,QAAQ,OAAO,IAAG,CAAC;AAAA,YAC/C;AAAA,UACJ;AAAA,UACA,uBAAuB,MAAM;AACzB,iBAAK,WAAW,UAAU,KAAK,mBAAmB;AAAA,UACtD;AAAA,UACA,uBAAuB,MAAM;AACzB,iBAAK,WAAW,YAAY,CAAC,mBAAmB;AAAA,UACpD;AAAA,QACJ;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,UACI,YAAY;AAAA,YACR,WAAW,CAAC,QAAQ;AAAA,UACxB;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ,CAAC;",
  "names": []
}
